import ccxt
import pandas as pd
import time

# Initialize exchange
exchange = ccxt.binance({
    'apiKey': 'YOUR_API_KEY',
    'secret': 'YOUR_SECRET_KEY',
})

# Fetch historical data
def fetch_data(symbol, timeframe, limit=100):
    bars = exchange.fetch_ohlcv(symbol, timeframe, limit=limit)
    df = pd.DataFrame(bars, columns=['timestamp', 'open', 'high', 'low', 'close', 'volume'])
    df['timestamp'] = pd.to_datetime(df['timestamp'], unit='ms')
    return df

# Calculate moving averages
def calculate_moving_averages(df, short_window=50, long_window=200):
    df['short_ma'] = df['close'].rolling(window=short_window).mean()
    df['long_ma'] = df['close'].rolling(window=long_window).mean()
    return df

# Trading logic
def check_for_signal(df):
    if df['short_ma'].iloc[-1] > df['long_ma'].iloc[-1] and df['short_ma'].iloc[-2] <= df['long_ma'].iloc[-2]:
        return 'buy'
    elif df['short_ma'].iloc[-1] < df['long_ma'].iloc[-1] and df['short_ma'].iloc[-2] >= df['long_ma'].iloc[-2]:
        return 'sell'
    return None

# Main function
def main():
    symbol = 'BTC/USDT'
    timeframe = '1h'
    while True:
        df = fetch_data(symbol, timeframe)
        df = calculate_moving_averages(df)
        signal = check_for_signal(df)
        if signal == 'buy':
            print("Buy signal detected")
            # Place buy order logic here
        elif signal == 'sell':
            print("Sell signal detected")
            # Place sell order logic here
        time.sleep(60 * 60)  # Wait for an hour before next check

if __name__ == "__main__":
    main()
